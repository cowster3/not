code
# Import required libraries
from selenium import webdriver
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.support.ui import Select
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import time
import requests

def solve_captcha(api_key, site_key, url):
    # Send the captcha to 2Captcha
    response = requests.post(
        "https://2captcha.com/in.php",
        data={
            "key": api_key,
            "method": "userrecaptcha",
            "googlekey": site_key,
            "pageurl": url,
            "json": 1
        }
    )
    
    response_data = response.json()
    if response_data["status"] != 1:
        raise Exception("Failed to submit captcha")
    
    captcha_id = response_data["request"]
    
    # Poll for the solution
    while True:
        time.sleep(5)  # Wait 5 seconds between polling attempts
        response = requests.get(
            "https://2captcha.com/res.php",
            params={
                "key": api_key,
                "action": "get",
                "id": captcha_id,
                "json": 1
            }
        )
        
        response_data = response.json()
        if response_data["status"] == 1:
            return response_data["request"]
        elif response_data["request"] != "CAPCHA_NOT_READY":
            raise Exception("Failed to solve captcha")

# Define the website URL and create the browser driver object
url = "https://example.com"
driver = webdriver.Chrome()

# Load the website
driver.get(url)

# Find the search input field and enter the search query
search_field = driver.find_element_by_name("search")
search_field.send_keys("Event name or keyword")

# Find the search button and click it
search_button = driver.find_element_by_xpath("//button[@type='submit']")
search_button.click()

# Wait for the search results page to load
search_results = WebDriverWait(driver, 10).until(
    EC.presence_of_element_located((By.ID, "search-results"))
)

# Find the first search result and click on it to go to the event page
first_result = search_results.find_element_by_xpath("//div[@class='search-result'][1]/a")
first_result.click()

# Wait for the event page to load
event_page = WebDriverWait(driver, 10).until(
    EC.presence_of_element_located((By.ID, "event-page"))
)

# Find the buy ticket button and click it
buy_button = event_page.find_element_by_xpath("//button[@class='buy-ticket']")
buy_button.click()

# Wait for the ticket purchasing page to load
ticket_page = WebDriverWait(driver, 10).until(
    EC.presence_of_element_located((By.ID, "ticket-page"))
)

# Find the ticket quantity input field and enter the desired quantity
ticket_quantity = driver.find_element_by_xpath("//input[@name='quantity']")
ticket_quantity.send_keys("1")

# Select the desired ticket type from a drop-down menu
ticket_type = Select(driver.find_element_by_name("ticket-type"))
ticket_type.select_by_visible_text("General Admission")

# Fill in the purchaser information
first_name = driver.find_element_by_name("first-name")
first_name.send_keys("John")

last_name = driver.find_element_by_name("last-name")
last_name.send_keys("Doe")

email = driver.find_element_by_name("email")
email.send_keys("johndoe@example.com")

# Find the reCAPTCHA site key (adjust this line if the site uses a different attribute to store the site key)
site_key = driver.find_element_by_xpath("//div[@class='g-recaptcha']").get_attribute("data-sitekey")

# Solve the captcha
captcha_solution = solve_captcha(api_key, site_key, driver.current_url)

# Execute a script to submit the solved captcha
driver.execute_script(f"document.getElementById('g-recaptcha-response').innerHTML='{captcha_solution}';")

# Submit the ticket purchase
submit_button = driver.find_element_by_xpath("//button[@type='submit']")
submit_button.click()

# Wait for the confirmation page to load
confirmation_page = WebDriverWait(driver, 10).until(
    EC.presence_of_element_located((By.ID, "confirmation-page"))
)

# Print the confirmation message
confirmation_message = confirmation_page.find_element_by_xpath("//h2").text
print(confirmation_message)

# Close the browser
driver.quit()
